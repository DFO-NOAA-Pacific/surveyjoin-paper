---
title: "Coastwide modeling of sablefish"
format: pdf
editor: visual
---

## Data

We are going to pull data from the `surveyjoin` package. We will include data from the GOA survey (AFSC), Synoptic surveys (DFO) and "NWFSC.Combo" survey.

```{r}
#remotes::install_github("DFO-NOAA-Pacific/surveyjoin", "8709fd1")
#remotes::install_github("pbs-assess/sdmTMB", "b146eb3")
library(surveyjoin)
library(sdmTMB)
library(tidyr)
library(dplyr)
library(ggplot2)

if(!file.exists("data_for_modelling_sablefish.rds")) {
  d <- get_data()
  alld <- dplyr::filter(d, survey_name %in% c("Gulf of Alaska","SYN HS","SYN QCS","SYN WCHG","SYN WCVI", "NWFSC.Combo"))
  
  dplyr::group_by(alld, common_name) |>
    dplyr::summarize(m = sum(catch_weight)) |>
    dplyr::arrange(-m) |> as.data.frame()
  # pacific ocean perch, sablefish, lingcod
  d <- dplyr::filter(alld, common_name == "sablefish")
  
  saveRDS(d, "data_for_modelling_sablefish.rds")
}
d <- readRDS("data_for_modelling_sablefish.rds")
```

## Data cleaning

The first step is to generate a mesh. The cutoff distance of 25km translates into \~ 944 knots.

```{r}
library(sdmTMB)
d <- dplyr::mutate(d, 
                   lon_mid = (lon_start + lon_end)/2,
                   lat_mid = (lat_start + lat_end)/2) |>
  dplyr::filter(!is.na(lon_mid), !is.na(lat_mid))
d <- add_utm_columns(d, ll_names = c("lon_mid","lat_mid"))
d <- dplyr::filter(d, !is.na(year))
d <- dplyr::filter(d, year >= 2003)

mesh <- make_mesh(d, xy_cols = c("X","Y"), cutoff=25)

mesh$mesh$n

```

```{r}
d$cpue <- d$catch_weight/d$effort
d$fyear <- as.factor(d$year)
```

## Statistical model

We'll include (1) a global intercept, (2) spatial field (representing the spatial intercept), (3) a spatially varying coefficient on time (year_scaled, representing the spatial trend). We use the delta-lognormal() distribution to model CPUE, with a Poisson-link.

```{r}
d$year_scaled <- as.numeric(scale(d$year))
if(!file.exists("fitted_models_sablefish.rds")) {
fit <- sdmTMB(cpue ~ year_scaled,
              spatial="on",
              spatiotemporal = "off",
              spatial_varying = ~ year_scaled,
              mesh = mesh,
              data = d,
              time = "year",
              family = delta_lognormal(type = "poisson-link"))
sanity(fit) # passes all sanity checks
saveRDS(fit, "fitted_models_sablefish.rds")
} else {
  fit <- readRDS("fitted_models_sablefish.rds")
}
```

## Predictions

We can extract the survey grids from the surveyjoin package for this. We need to

```{r}
# pred <- predict(fit)
# ggplot(dplyr::filter(pred, year==2023), aes(X, Y, col = zeta_s_year_scaled1)) + 
#   geom_point()

afsc_grid <- surveyjoin::afsc_grid |>
  dplyr::filter(survey == "Gulf of Alaska Bottom Trawl Survey") |>
  dplyr::mutate(region="afsc")
pbs_grid <- surveyjoin::dfo_synoptic_grid |>
  dplyr::mutate(region="pbs")
nwfsc_grid <- surveyjoin::nwfsc_grid |>
  dplyr::mutate(region="nwfsc")
grid <- rbind(afsc_grid,
pbs_grid, nwfsc_grid) |>
  dplyr::select(-survey_domain_year)
grid <- add_utm_columns(grid, ll_names = c("lon","lat"), utm_crs = 3157)
grid$year <- 2023

grid$year_scaled <- (grid$year - mean(fit$data$year)) / sd(fit$data$year)

pred <- predict(fit, newdata = grid)
pred <- dplyr::select(pred, -X, -Y)# drop X and Y
# pred is utm crs 3157. Lewis' map is crs_out <- "EPSG:3338"
crs_out <- "EPSG:3338"
pred <- pred |>
sf::st_as_sf(coords = c("lon", "lat"),
               crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0") |>
  sf::st_transform(crs = crs_out)
pred <- cbind(pred, sf::st_coordinates(pred))

map_data <- rnaturalearth::ne_countries(
  scale = "medium",
  returnclass = "sf", country = c("united states of america","canada","mexico"))
coast <- suppressWarnings(suppressMessages(
  sf::st_crop(map_data,
    c(xmin = -179, ymin = 15, xmax = -80, ymax = 70))))
coast_proj <- sf::st_transform(coast, crs = crs_out)

# Get the intercepts from the main effects part of the model
b1 <- tidy(fit, model = 1)
b2 <- tidy(fit, model = 2)
z1 <- b1$estimate[b1$term == "year_scaled"]
z2 <- b2$estimate[b1$term == "year_scaled"]

place_labels <- data.frame(
  type = c("mainland", "mainland", "mainland", "mainland", "survey",
           "peninsula", "survey", "survey", "survey", "survey", "survey"),
  lab = c("Alaska", "Russia", "Canada", "USA", "West Coast",
          "Alaska Peninsula", "Aleutian Islands", "Gulf of Alaska",
          "Bering\nSea\nSlope", "Eastern\nBering Sea", "Northern\nBering Sea"),
  angle = c(0, 0, 0, 0, -45, 45, 0, 30, 0, 0, 0),
  lat = c(63, 61.798276, 58, 42, 40, 56.352495, 53.25, 54.720787,
          57, 57.456912, 62.25),
  lon = c(-154, 173.205231, -122, -120, -125.2,
          -159.029430, -173, -154.794131, -176, -162, -170.5)) %>%
  dplyr::filter(type != "peninsula") %>%
  sf::st_as_sf(coords = c("lon", "lat"),
               crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0") %>%
  sf::st_transform(crs = crs_out)


p1 <- ggplot(coast_proj) + 
  geom_sf(fill="grey10", col = "grey20") + 
  geom_point(data = pred, aes(X,Y, col = zeta_s_year_scaled1+zeta_s_year_scaled2+z1+z2),size=0.1) +
  scale_color_gradient2(name = "Annual trend", low = "red", high = "blue") +
<<<<<<< HEAD
  xlim(min(pred$X),max(pred$X)) +
  ylim(min(pred$Y),max(pred$Y)+250000) +
  geom_sf(fill="grey10") +
=======
>>>>>>> fd8202e6621a30d4f2569daa1b9fabd4c96690fb
  theme_bw() +
  labs(x = "Longitude (\u00B0W)", y = "Latitude (\u00B0N)")
p1 <- p1 + ggplot2::geom_sf_text(
    data = place_labels %>% dplyr::filter(type == "mainland", lab!="Russia"),
    mapping = aes(label = lab, angle = angle),
    color = "grey60",
    size = 3,
    show.legend = FALSE)

p2 <- ggplot(coast_proj) + 
  geom_sf(fill="grey10", col = "grey20") +
  geom_point(data = pred, aes(X,Y, col = est_non_rf1 + omega_s1 + est_non_rf2 + omega_s2),size=0.1) +
  scale_color_gradient2(name = "Intercept", low = "red", high = "blue") +
<<<<<<< HEAD
  xlim(min(pred$X),max(pred$X)) +
  ylim(min(pred$Y),max(pred$Y)+250000) +
  geom_sf(fill="grey10") +
=======
>>>>>>> fd8202e6621a30d4f2569daa1b9fabd4c96690fb
  theme_bw() +
  labs(x = "Longitude (\u00B0W)", y = "Latitude (\u00B0N)")

p2 <- p2 + ggplot2::geom_sf_text(
    data = place_labels %>% dplyr::filter(type == "mainland", lab!="Russia"),
    mapping = aes(label = lab, angle = angle),
    color = "grey60",
    size = 3,
    show.legend = FALSE)

p3 <- gridExtra::grid.arrange(p2, p1, ncol=1)
ggsave(p3, filename="combined_sablefish_maps.png", width=7, height=8)
```
